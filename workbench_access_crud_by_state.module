<?php

/*
function workbench_access_crud_by_state_workbench_access_user_alter($access, $account) {
  foreach(array_keys($access) as $key) {
    $access[$key]['update'] = array('none');
  }
}
*/



/**
 * Implements hook_node_access().
 */
function workbench_access_crud_by_state_node_access($node, $op, $account) {
  if ($op != 'update') {
    return NODE_ACCESS_IGNORE;
  }

  // If disabled for this content type, do nothing.
  if (!is_object($node)) {
    $type = $node;
  }
  else {
    $type = $node->type;
  }
  if (!variable_get('workbench_access_node_type_' . $type, 1)) {
    return NODE_ACCESS_IGNORE;
  }

  // Now check the user account.
  if (!isset($account->workbench_access)) {
    $account = user_load($account->uid);
  }

  // Load the current scheme.
//  workbench_access_load_include(variable_get('workbench_access'));

  // check if author == current user
  // -> not allowed to update 
  if ($account->name == $node->name) {
    //$author_edit_states = array('bereit_zur_pr_fung','entwurf');
    $author_edit_states = array('entwurf');
    if (!in_array($node->workbench_moderation['current']->state, $author_edit_states)) {
      //debug('in array DENY');
      return NODE_ACCESS_DENY;
    }
  } else {
    //debug('update ok, not author!');
  }
}

/*
Diverse regeln koennen vom admin eingestellt werden

* Metaregeln dh. regeln die etliche granulare regeln auf einmal setzen
* presets, die fuer viele use cases sinn machen 
* Autoren duerfen nur in states x-y editieren, meist nur im entwurf

Diese regeln abgreifen aus dem hook node_access und dementsprechend agieren

* Einige sections duerfen in einigen states nicht editieren
* also:
* zwei variablen (spaeter tables)
* 
* author_edit_states: alle states in denen editiert werden darf
*
* sections_limited: 
* alle sections die der beschraenkung der gewissen edit states unterliegen
*/



